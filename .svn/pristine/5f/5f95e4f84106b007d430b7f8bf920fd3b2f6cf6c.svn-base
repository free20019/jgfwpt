package mvc.service.impl;

import mvc.service.TransportationDataAccessService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;
import util.JacksonUtil;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by xiaxing
 * At 2019/3/11 14:57
 */
@Service
public class TransportationDataAccessImpl implements TransportationDataAccessService {
    @Autowired
    protected JdbcTemplate jdbcTemplate;

    private JacksonUtil jacksonUtil = JacksonUtil.buildNormalBinder();

    //车辆信息
    @Override
    public String getVehicleInformation(String vehiNo, String companyName,String region) {
        String tj = "";
        int page = 1;
        int pageSize = 20;
        if(vehiNo!=null&&!vehiNo.isEmpty()&&!vehiNo.equals("null")&&vehiNo.length()>0&&!vehiNo.equals("请选择车牌号码")){
            tj += " and b.PLATE_NUMBER = '"+vehiNo+"'";
        }
        if(companyName!=null&&!companyName.isEmpty()&&!companyName.equals("null")&&companyName.length()>0&&!companyName.equals("请选择业户名称")){
            tj += " and b.COMPANY_NAME = '"+companyName+"'";
        }
        if(region!=null&&!region.isEmpty()&&!region.equals("null")&&region.length()>0&&!region.equals("全部区域")){
            tj += " and b.AREA_NAME = '"+region+"'";
        }

        String sql = "select (select count(*) COUNT from (select * from (select * from tb_global_vehicle where BUSINESS_SCOPE_NAME='客运：出租车客运。' AND STATUS_NAME='营运' AND PLATE_NUMBER LIKE '浙A%') b where 1=1 ";
        sql += tj;
        sql+=")) as count, tt.* from (select t.*, m.*,rownum as rn from (select"
                + " b.* from (select * from tb_global_vehicle where BUSINESS_SCOPE_NAME='客运：出租车客运。' AND STATUS_NAME='营运' AND PLATE_NUMBER LIKE '浙A%') b where 1=1";
        sql += tj;
        sql += " ) t left join (select HOLDER,HOLDER_PHONE,HOLDER_ID,VEHICLE_PLATE_NUMBER from TB_TAXI_MANAGE_RIGHT_OUT) m on m.VEHICLE_PLATE_NUMBER=t.PLATE_NUMBER  where rownum <= "+(page*pageSize)+") tt where tt.rn > "+((page-1)*pageSize);
        sql +="order by PLATE_NUMBER";

        List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
        int count = 0;
        if( list!=null && list.size() >0){
            count = Integer.parseInt(String.valueOf(list.get(0).get("COUNT")));
        }
        for(int i=0;i<list.size();i++){
            if(list.get(i).get("BUSINESS_SCOPE_NAME")!=null){
                String scope=list.get(i).get("BUSINESS_SCOPE_NAME").toString();
                if(scope.equals("网络预约出租汽车客运。")||scope.equals("客运：网络预约出租汽车客运。")){
                    scope="";
                }
                list.get(i).put("BUSINESS_SCOPE_NAME", scope);
            }
        }
        Map map = new HashMap();
        map.put("count", count);
        map.put("datas",list);
        return jacksonUtil.toJson(map);
    }

    //驾驶员信息
    @Override
    public String getDriverInformation(String vehiNo, String name, String idNumber, String areaName) {
        int page = 1;
        int pageSize = 10;
        String tj = "";
        name = "来建平";
        if(idNumber!=null&&!idNumber.isEmpty()&&!idNumber.equals("null")&&idNumber.length()>0){
            tj += " and b.ID_NUMBER = '"+idNumber+"'";
        }
        if(vehiNo!=null&&!vehiNo.isEmpty()&&!vehiNo.equals("null")&&vehiNo.length()>0){
            tj += " and ( b.PLATE_NUMBER = '"+vehiNo+"' or REPLACE(b.PLATE_NUMBER,'.','')  = '"+vehiNo+"' ) ";
        }
        if(name!=null&&!name.isEmpty()&&!name.equals("null")&&name.length()>0){
            tj += " and b.NAME = '"+name+"'";
        }
        if(areaName!=null&&!areaName.isEmpty()&&!areaName.equals("null")&&areaName.length()>0&&!areaName.equals("全部区域")){
            tj += " and b.AREA_NAME = '"+areaName+"'";
        }
        String sql = "select (select count(*) COUNT from (select distinct id_number from (select "
                + " b.* from (select gpc.* from tb_global_vehicle gv,TB_GLOBAL_PERSON_CERTIFICATE gpc where REPLACE(gpc.plate_number,'.','')=gv.plate_number and gv.BUSINESS_SCOPE_NAME='客运：出租车客运。' AND gv.STATUS_NAME='营运' AND gpc.plate_number LIKE '浙A%') b where 1=1 and id_number is not null ";		sql += tj;
        sql += " ) t";
        sql+=")) as count, tt.* from (select t.*,ti.ASSESS_SCORE,ti.ASSESS_YEAR, rownum as rn from (select"
                + " b.* from (select distinct gpc.* from tb_global_vehicle gv,TB_GLOBAL_PERSON_CERTIFICATE gpc where REPLACE(gpc.plate_number,'.','')=gv.plate_number and gv.BUSINESS_SCOPE_NAME='客运：出租车客运。' AND gv.STATUS_NAME='营运' AND gpc.plate_number LIKE '浙A%') b where 1=1 and id_number is not null and (id,id_number) in (select max(id),id_number from"
                + " (select gpc.* from tb_global_vehicle gv,TB_GLOBAL_PERSON_CERTIFICATE gpc where REPLACE(gpc.plate_number,'.','')=gv.plate_number and gv.BUSINESS_SCOPE_NAME='客运：出租车客运。' AND gv.STATUS_NAME='营运' AND gpc.plate_number LIKE '浙A%') group by id_number) ";
        sql += tj;
        sql += " ) t left join (select distinct ti.ASSESS_SCORE,ti.ASSESS_YEAR,ti.id_number from TB_TAXI_INTEGRITY_INFO_OUT ti "
                + "where (ti.id_number,ti.ASSESS_YEAR,ASSESS_SCORE) in (select id_number,max(ti.ASSESS_YEAR),max(ti.ASSESS_SCORE) from TB_TAXI_INTEGRITY_INFO_OUT ti  group by id_number)) ti  "
                + "on ti.id_number=t.id_number "
                + "where rownum <= "+(page*pageSize)+") tt where tt.rn > "+((page-1)*pageSize);
        sql +=" order by PLATE_NUMBER";

        System.out.println(sql);

        List<Map<String, Object>> list = jdbcTemplate.queryForList(sql);
        int count = 0;
        if( list!=null && list.size() >0){
            count = Integer.parseInt(String.valueOf(list.get(0).get("COUNT")));
            for(int i=0;i<list.size();i++){
                list.get(i).put("PLATE_NUMBER", String.valueOf(list.get(i).get("PLATE_NUMBER")).replace(".",""));
            }
        }
        Map  map = new HashMap ();
        map.put("count", count);
        map.put("datas",list);
        return jacksonUtil.toJson(map);
    }
}
