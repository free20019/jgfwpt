package mvc.service.impl;

import mvc.service.CommonService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;
import util.JacksonUtil;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.File;
import java.io.FileInputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by donghuibin on 2019-02-15
 * At 13:27
 */
@Service("commonService")
public class CommonServiceImpl implements CommonService {
	@Autowired
	protected JdbcTemplate jdbcTemplate;

	private JacksonUtil jacksonUtil = JacksonUtil.buildNormalBinder();

	@Override
	public String getVehicle() {
//		String sql = "select distinct vehi_no vehicle_no from TB_VEHICLE where vehi_no <>' ' order by vehi_no";
		String sql = "select distinct PLATE_NUMBER vehicle_no from tb_global_vehicle@db69 where BUSINESS_SCOPE_NAME='客运：出租车客运。' AND STATUS_NAME='营运' AND PLATE_NUMBER LIKE '浙A%' order by PLATE_NUMBER";
		return jacksonUtil.toJson(jdbcTemplate.queryForList(sql));
	}

    @Override
    public String getCompany() {
//		String sql = "select distinct comp_name from TB_COMPANY where comp_name <>' '";
		String sql = "select distinct company_name comp_name from tb_global_vehicle where BUSINESS_SCOPE_NAME='客运：出租车客运。' AND STATUS_NAME='营运' AND PLATE_NUMBER LIKE '浙A%' AND company_name <>' ' order by company_name";
		return jacksonUtil.toJson(jdbcTemplate.queryForList(sql));
    }

	@Override
	public String getNumber() {
//		String sql = "select distinct user_id,real_name,user_name from tb_user_wx u,tb_user_power p where u.note=p.id and p.power_info like '%电话回访%'";
		String sql = "select distinct user_id,real_name,user_name from tb_user where trim(translate(user_name,'0123456789',' ')) is NULL order by user_name";
		return jacksonUtil.toJson(jdbcTemplate.queryForList(sql));
	}

	@Override
	public String getStation() {
		String sql = "select distinct REPLACE(ADDRESS,CHR(13),'')  ADDRESS from tb_vehicle_hk where ADDRESS <>' ' order by REPLACE(ADDRESS,CHR(13),'')";
		return jacksonUtil.toJson(jdbcTemplate.queryForList(sql));
	}

	@Override
	public String getCaptureCompany() {
		String sql = "select distinct company_name from tb_global_vehicle where BUSINESS_SCOPE_NAME='客运：出租车客运。' AND STATUS_NAME='营运' AND PLATE_NUMBER LIKE '浙A%' AND company_name <>' ' order by company_name";
		List<Map<String, Object>> list=jdbcTemplate.queryForList(sql);
		Map<String, Object> map1=new HashMap<String, Object>();
		Map<String, Object> map2=new HashMap<String, Object>();
		map1.put("COMPANY_NAME","公司为空");
		map2.put("COMPANY_NAME","公司不为空");
		list.add(0,map1);
		list.add(1,map2);
		return jacksonUtil.toJson(list);
	}

	@Override
	public String getArea() {
		String sql = "select distinct ID,AREA_NAME from TB_UPDOWNAREA where AREA_NAME <>' ' order by AREA_NAME";
		return jacksonUtil.toJson(jdbcTemplate.queryForList(sql));
	}

	@Override
	public void getFile(HttpServletRequest request, HttpServletResponse response, String key) {
		try {
//			InputStream in = commonDao.getImage(key);
//			if(in == null){
				String path = "E:/hk/hk_pic/"+key;
				File pf = new File(path);
				FileInputStream fin = new FileInputStream(pf);
				ServletOutputStream fout =  response.getOutputStream();
				byte bts [] = new byte[fin.available()];
				fin.read(bts);
				fout.write(bts);
				fin.close();
				fout.close();

//				URL url = new URL("http://192.168.0.102:9000/"+key);
//				InputStream ism=url.openStream();
//				ServletOutputStream fout =  response.getOutputStream();
//				byte bts [] = new byte[ism.available()];
//				ism.read(bts);
//				fout.write(bts);
//				ism.close();
//				fout.close();
//			}else {
//				ServletOutputStream fout =  response.getOutputStream();
//				byte[] content = new byte[1024];
//				int length = 0;
//				if (in != null) {
//					while ((length = in.read(content)) != -1) {
//						fout.write(content, 0, length);
//					}
//				}
//				in.close();
//				fout.close();
//			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
