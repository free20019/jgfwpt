package mvc.controller;

import mvc.service.IndustryOperationService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import util.DownloadAct;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.List;
import java.util.Map;

/**
 * Created by xiaxing
 * At 2019/2/18 9:34
 */
//行业运行情况分析
@Controller
@RequestMapping("/industryOperation")
public class IndustryOperationController {
    @Autowired
    private IndustryOperationService industryOperationService;
    private DownloadAct downloadAct = new DownloadAct();

    //单车营运情况分析
    @RequestMapping("/getCyclingOperation")
    @ResponseBody
    public String getCyclingOperation(String vehiNo,String stime,String etime) throws UnsupportedEncodingException {
        if(vehiNo!=null&&!vehiNo.isEmpty()&&vehiNo.length()>0&&!vehiNo.equals("")){
            vehiNo = new String(vehiNo.getBytes("iso-8859-1"),"utf-8");
        }
        return industryOperationService.getCyclingOperation(vehiNo,stime,etime);
    }

    //导出单车营运情况分析Excel
    @RequestMapping("/getCyclingOperationExcel")
    @ResponseBody
    public String getCyclingOperationExcel(HttpServletRequest request, HttpServletResponse response, String vehiNo, String stime, String etime) throws IOException {
        if(vehiNo!=null&&!vehiNo.isEmpty()&&vehiNo.length()>0&&!vehiNo.equals("")){
            vehiNo = new String(vehiNo.getBytes("iso-8859-1"),"utf-8");
        }
        String a[] = {"车牌号码","服务资格证号","上车时间","下车时间","营运时间","载客里程","空车里程","等候时间","交易类型","营运金额"};//导出列明
        String b[] = {"CPHM_NEW","YINGYUN","SHANGCHE","XIACHE","YYSJ","JICHENG","KONGSHI","DENGHOU","JIAOYITYPE","JINE"};//导出map中的key
        String gzb = "单车营运情况分析";//导出sheet名和导出的文件名
        String msg = industryOperationService.getCyclingOperation(vehiNo,stime,etime);
        List<Map<String, Object>> list = downloadAct.strlist(msg);
        downloadAct.download(request,response,a,b,gzb,list);
        return null;
    }

    //行业营运情况分析
    @RequestMapping("/getIndustryOperations")
    @ResponseBody
    public String getIndustryOperations(String vehiNo,String companyName,String stime,String etime) throws UnsupportedEncodingException {
        if(vehiNo!=null&&!vehiNo.isEmpty()&&vehiNo.length()>0&&!vehiNo.equals("")){
            vehiNo = new String(vehiNo.getBytes("iso-8859-1"),"utf-8");
        }
        if(companyName!=null&&!companyName.isEmpty()&&companyName.length()>0&&!companyName.equals("")){
            companyName = new String(companyName.getBytes("iso-8859-1"),"utf-8");
        }
        return industryOperationService.getIndustryOperations(vehiNo,companyName,stime,etime);
    }

    //导出行业营运情况分析Excel
    @RequestMapping("/getIndustryOperationsExcel")
    @ResponseBody
    public String getIndustryOperationsExcel(HttpServletRequest request, HttpServletResponse response,String vehiNo,String companyName,String stime,String etime) throws IOException {
        if(vehiNo!=null&&!vehiNo.isEmpty()&&vehiNo.length()>0&&!vehiNo.equals("")){
            vehiNo = new String(vehiNo.getBytes("iso-8859-1"),"utf-8");
        }
        if(companyName!=null&&!companyName.isEmpty()&&companyName.length()>0&&!companyName.equals("")){
            companyName = new String(companyName.getBytes("iso-8859-1"),"utf-8");
        }
        String a[] = {"日期","车辆数","营运次数","营运金额","营运里程","空驶里程","载客时间","载客等候时间"};//导出列明
        String b[] = {"DAY","CPHM","TJCS","JINE","SZLC","KSLC","KSLC","DHSJ"};//导出map中的key
        String gzb = "行业营运情况分析";//导出sheet名和导出的文件名
        String msg = industryOperationService.getIndustryOperations(vehiNo,companyName,stime,etime);
        List<Map<String, Object>> list = downloadAct.strlist(msg);
        downloadAct.download(request,response,a,b,gzb,list);
        return null;
    }

    //行业平均运行情况分析
    @RequestMapping("/getIndustryOperation")
    @ResponseBody
    public String getIndustryOperation(String stime,String etime){
        return industryOperationService.getIndustryOperation(stime,etime);
    }

    //导出行业平均运行情况分析Excel
    @RequestMapping("/getIndustryOperationExcel")
    @ResponseBody
    public String getIndustryOperationExcel(HttpServletRequest request, HttpServletResponse response,String stime,String etime) throws IOException {
        String a[] = {"日期","单车平均营运收益","单车平均载客里程","单车平均空驶里程","单车平均载客时间","单车平均载客等候时间"};//导出列明
        String b[] = {"DAY","JINE","SZLC","KSLC","YSSC","DHSJ"};//导出map中的key
        String gzb = "行业平均运行情况分析";//导出sheet名和导出的文件名
        String msg = industryOperationService.getIndustryOperation(stime,etime);
        List<Map<String, Object>> list = downloadAct.strlist(msg);
        downloadAct.download(request,response,a,b,gzb,list);
        return null;
    }

    //总体营运趋势分析
    @RequestMapping("/getOperationTrend")
    @ResponseBody
    public String getOperationTrend(){
        return industryOperationService.getOperationTrend();
    }

    //运力需求热点分析
    @RequestMapping("/getTransportationCapacityHotspot")
    @ResponseBody
    public String getTransportationCapacityHotspot(){
        return industryOperationService.getTransportationCapacityHotspot();
    }

    //打车热点OD分析
    @RequestMapping("/getTaxiHotspot")
    @ResponseBody
    public String getTaxiHotspot(){
        return industryOperationService.getTaxiHotspot();
    }



    //企业车辆营运情况分析
    @RequestMapping("/getVehicleOperation")
    @ResponseBody
    public String getVehicleOperation(String companyName,String stime,String etime) throws UnsupportedEncodingException {
        if(companyName!=null&&!companyName.isEmpty()&&companyName.length()>0&&!companyName.equals("")){
            companyName = new String(companyName.getBytes("iso-8859-1"),"utf-8");
        }
        return industryOperationService.getVehicleOperation(companyName,stime,etime);
    }

    //导出企业车辆营运情况分析Excel
    @RequestMapping("/getVehicleOperationExcel")
    @ResponseBody
    public String getVehicleOperationExcel(HttpServletRequest request, HttpServletResponse response,String companyName,String stime,String etime) throws IOException {
        if(companyName!=null&&!companyName.isEmpty()&&companyName.length()>0&&!companyName.equals("")){
            companyName = new String(companyName.getBytes("iso-8859-1"),"utf-8");
        }
        String a[] = {"公司","营运车辆数","营运数","营运金额","总里程","载客里程","空驶里程","实载率","载客时间","载客等候时间"};//导出列明
        String b[] = {"ZGS","VEHINUMBER","TJCS","JINE","ZLC","SZLC","KSLC","RATE","YSSC","DHSJ"};//导出map中的key
        String gzb = "企业车辆营运情况分析";//导出sheet名和导出的文件名
        String msg = industryOperationService.getVehicleOperation(companyName,stime,etime);
        List<Map<String, Object>> list = downloadAct.strlist(msg);
        downloadAct.download(request,response,a,b,gzb,list);
        return null;
    }

    //驾驶员收入情况分析
    @RequestMapping("/getIncomeAnalysis")
    @ResponseBody
    public String getIncomeAnalysis(String cardNumber,String stime,String etime){
        return industryOperationService.getIncomeAnalysis(cardNumber,stime,etime);
    }

    //导出驾驶员收入情况分析Excel
    @RequestMapping("/getIncomeAnalysisExcel")
    @ResponseBody
    public String getIncomeAnalysisExcel(HttpServletRequest request, HttpServletResponse response,String cardNumber,String stime,String etime) throws IOException {
        String a[] = {"服务资格证号","驾驶员姓名","营运次数","营运金额","总里程","载客里程","空驶里程","实载率","载客时间","载客等候时间"};//导出列明
        String b[] = {"YINGYUN","NAME","YYCS","JINE","ZLC","JICHENG","KONGSHI","RATE","ZKSJ","DHSJ"};//导出map中的key
        String gzb = "驾驶员收入情况分析";//导出sheet名和导出的文件名
        String msg = industryOperationService.getIncomeAnalysis(cardNumber,stime,etime);
        List<Map<String, Object>> list = downloadAct.strlist(msg);
        downloadAct.download(request,response,a,b,gzb,list);
        return null;
    }

    //车辆运行排行
    @RequestMapping("/getVehicleRunningRanking")
    @ResponseBody
    public String getVehicleRunningRanking(String companyName,String cardNumber,String stime,String etime) throws UnsupportedEncodingException {
        cardNumber = new String(cardNumber.getBytes("iso-8859-1"),"utf-8");
        companyName = new String(companyName.getBytes("iso-8859-1"),"utf-8");
        System.out.println(cardNumber);
        return industryOperationService.getVehicleRunningRanking(companyName,cardNumber,stime,etime);
    }

    //导出车辆运行排行Excel
    @RequestMapping("/getVehicleRunningRankingExcel")
    @ResponseBody
    public String getVehicleRunningRankingExcel(HttpServletRequest request, HttpServletResponse response,String companyName,String cardNumber,String stime,String etime) throws IOException {
        String a[] = {"公司","车牌号码","SIM卡号","营运次数","营运金额","总里程","载客里程","空驶里程","实载率","载客时间","载客等候时间"};//导出列明
        String b[] = {"BA_NAME","CP","VEHI_SIM","TJCS","JINE","ZLC","SZLC","KSLC","RATE","YSSC","DHSJ"};//导出map中的key
        String gzb = "车辆运行排行";//导出sheet名和导出的文件名
        String msg = industryOperationService.getVehicleRunningRanking(companyName,cardNumber,stime,etime);
        List<Map<String, Object>> list = downloadAct.strlist(msg);
        downloadAct.download(request,response,a,b,gzb,list);
        return null;
    }

    //OD营运数据分析
    @RequestMapping("/getODOperationDataAnalysis")
    @ResponseBody
    public String getODOperationDataAnalysis(String SJD,String stime,String etime,String QD) throws UnsupportedEncodingException {
        SJD = new String(SJD.getBytes("iso-8859-1"),"utf-8");
        QD = new String(QD.getBytes("iso-8859-1"),"utf-8");
        if(SJD.equals("0")){
            SJD = "全天";
        }
        if(QD.equals("0")){
            QD = "火车东站";
        }
        if(QD.equals("1")){
            QD = "城站火车站";
        }
        if(QD.equals("2")){
            QD = "萧山机场";
        }
        return industryOperationService.getODOperationDataAnalysis(SJD,stime,etime,QD);
    }

    //导出OD营运数据分析Excel
    @RequestMapping("/getODOperationDataAnalysisExcel")
    @ResponseBody
    public String getODOperationDataAnalysisExcel(HttpServletRequest request, HttpServletResponse response,String SJD,String stime,String etime,String QD) throws IOException {
        if(SJD.equals("0")){
            SJD = "全天";
        }
        if(QD.equals("0")){
            QD = "火车东站";
        }
        if(QD.equals("1")){
            QD = "城站火车站";
        }
        if(QD.equals("2")){
            QD = "萧山机场";
        }
        String a[] = {"车牌号码","终端编号","营运资格服务证","上车时间","下车时间","计程","等候时间","交易金额","空驶","交易类型","TAC交易认证码","POS机号"};//导出列明
        String b[] = {"CPHM_NEW","ZHONGDUANNO","YINGYUN","SCSJ","XCSJ","JICHENG","DENGHOU","JINE","KONGSHI","JIAOYITYPE","TAC","POS"};//导出map中的key
        String gzb = "OD营运数据分析";//导出sheet名和导出的文件名
        String msg = industryOperationService.getODOperationDataAnalysis(SJD,stime,etime,QD);
        List<Map<String, Object>> list = downloadAct.strlist(msg);
        downloadAct.download(request,response,a,b,gzb,list);
        return null;
    }

    //OD流向统计
    @RequestMapping("/getODFlowStatistics")
    @ResponseBody
    public String getODFlowStatistics(String SJD,String stime,String etime,String QD) throws UnsupportedEncodingException {
        SJD = new String(SJD.getBytes("iso-8859-1"),"utf-8");
        QD = new String(QD.getBytes("iso-8859-1"),"utf-8");
        if(SJD.equals("0")){
            SJD = "全天";
        }
        if(QD.equals("0")){
            QD = "火车东站";
        }
        if(QD.equals("1")){
            QD = "城站火车站";
        }
        if(QD.equals("2")){
            QD = "萧山机场";
        }
        return industryOperationService.getODFlowStatistics(SJD,stime,etime,QD);
    }

    //导出OD流向统计Excel
    @RequestMapping("/getODFlowStatisticsExcel")
    @ResponseBody
    public String getODFlowStatisticsExcel(HttpServletRequest request, HttpServletResponse response,String SJD,String stime,String etime,String QD) throws IOException {
        if(SJD.equals("0")){
            SJD = "全天";
        }
        if(QD.equals("0")){
            QD = "火车东站";
        }
        if(QD.equals("1")){
            QD = "城站火车站";
        }
        if(QD.equals("2")){
            QD = "萧山机场";
        }
        String a[] = {"目的地","车辆数"};//导出列明
        String b[] = {"AREA_NAME","COUNT_NUM"};//导出map中的key
        String gzb = "OD流向统计";//导出sheet名和导出的文件名
        String msg = industryOperationService.getODFlowStatistics(SJD,stime,etime,QD);
        List<Map<String, Object>> list = downloadAct.strlist(msg);
        downloadAct.download(request,response,a,b,gzb,list);
        return null;
    }

    //OD流向图
    @RequestMapping("/getODFlowDiagram")
    @ResponseBody
    public String getODFlowDiagram (String SJD,String stime,String etime,String QD) throws UnsupportedEncodingException {
        SJD = new String(SJD.getBytes("iso-8859-1"),"utf-8");
        QD = new String(QD.getBytes("iso-8859-1"),"utf-8");
        if(SJD.equals("0")){
            SJD = "全天";
        }
        if(QD.equals("0")){
            QD = "火车东站";
        }
        if(QD.equals("1")){
            QD = "城站火车站";
        }
        if(QD.equals("2")){
            QD = "萧山机场";
        }
        return industryOperationService.getODFlowDiagram(SJD,stime,etime,QD);
    }

    //夜间停放位置分析
    @RequestMapping("/getParkingPlaceAtNight")
    @ResponseBody
    public String getParkingPlaceAtNight(String time){
        return industryOperationService.getParkingPlaceAtNight(time);
    }

    //驾驶员违法统计
    @RequestMapping("/getDriverIllegalStatistics")
    @ResponseBody
    public String getDriverIllegalStatistics(String vehicle,String partyName,String stime,String etime) throws UnsupportedEncodingException {
        if(vehicle!=null&&!vehicle.isEmpty()&&vehicle.length()>0&&!vehicle.equals("")){
            vehicle = new String(vehicle.getBytes("iso-8859-1"),"utf-8");
        }
        if(partyName!=null&&!partyName.isEmpty()&&partyName.length()>0&&!partyName.equals("")){
            partyName = new String(partyName.getBytes("iso-8859-1"),"utf-8");
        }
        return industryOperationService.getDriverIllegalStatistics(vehicle,partyName,stime,etime);
    }

    //导出驾驶员违法统计Excel
    @RequestMapping("/getDriverIllegalStatisticsExcel")
    @ResponseBody
    public String getDriverIllegalStatisticsExcel(HttpServletRequest request, HttpServletResponse response,String vehicle,String partyName,String stime,String etime) throws IOException {
        if(vehicle!=null&&!vehicle.isEmpty()&&vehicle.length()>0&&!vehicle.equals("")){
            vehicle = new String(vehicle.getBytes("iso-8859-1"),"utf-8");
        }
        if(partyName!=null&&!partyName.isEmpty()&&partyName.length()>0&&!partyName.equals("")){
            partyName = new String(partyName.getBytes("iso-8859-1"),"utf-8");
        }
        String a[] = {"当事人姓名","车牌号码","扣分","违章时间","执法时间","案件原因","执法部门","执法区域","经营许可证号"};//导出列明
        String b[] = {"PARTY_NAME","AUTO_NUM","INTEGRAL","ILLEGAL_TIME","LEGAL_TIME","CASE_REASON","ORGAN","AREA","LIENCE_NUM"};//导出map中的key
        String gzb = "驾驶员违法统计";//导出sheet名和导出的文件名
        String msg = industryOperationService.getDriverIllegalStatistics(vehicle,partyName,stime,etime);
        List<Map<String, Object>> list = downloadAct.strlist(msg);
        downloadAct.download(request,response,a,b,gzb,list);
        return null;
    }

    //投诉查询
    @RequestMapping("/getComplaintsStatistics")
    @ResponseBody
    public String getComplaintsStatistics(String typeComplaint,String stime,String etime) throws UnsupportedEncodingException {
        typeComplaint = new String(typeComplaint.getBytes("iso-8859-1"),"utf-8");
        return industryOperationService.getComplaintsStatistics(typeComplaint,stime,etime);
    }

}
